<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Value (2)</Title>
			<Shortcut>val2</Shortcut>
			<Description>Code snippet for creating a simple value type which wraps two values</Description>
			<Author>Ryan Harris</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Declarations>
        <Literal>
          <ID>valuetype</ID>
          <ToolTip>Value Type</ToolTip>
          <Default>ValueObject</Default>
        </Literal>
				<Literal>
					<ID>type1</ID>
					<ToolTip>Property type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>field1</ID>
					<ToolTip>field name</ToolTip>
					<Default>myField1</Default>
				</Literal>
      <Literal>
					<ID>type2</ID>
					<ToolTip>Property type</ToolTip>
					<Default>int</Default>
				</Literal>
				<Literal>
					<ID>field2</ID>
					<ToolTip>field name</ToolTip>
					<Default>myField2</Default>
				</Literal>
			</Declarations>
			<Code Language="csharp">
        <![CDATA[public sealed class $valuetype$ : Value
    {
        private readonly $type1$ _$field1$;
        private readonly $type2$ _$field2$;
        public $valuetype$($type1$ $field1$, $type2$ $field2$$end$) =>
            (_$field1$, _$field2$) = ($field1$, $field2$);
        protected override IEnumerable<ValueBase> GetValues() => Yield(_$field1$, _$field2$);
    }]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>